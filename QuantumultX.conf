# Sample Quantumult Configuration
# 示例 Quantumult 配置
#
# Line started with ";" or "#" or "//" shall be comments.
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# SS-URI scheme can be found at https://shadowsocks.org/en/spec/SIP002-URI-Scheme.html
# SS-URI 方案可在 https://shadowsocks.org/en/spec/SIP002-URI-Scheme.html 找到
#
# Quantumult uses HEAD method send HTTP request to the server_check_url to test the proxy's status, the results should be two latencies, the first one is TCP handshake to the proxy server, the second one is the HTTP latency(The duration between Quantumult successfully received the HTTP response from the server_check_url and Quantumult start sending the HTTP request to the server_check_url). The lightning icon means that the TCP fast open is successful. If the server in section [server_local] or section [server_remote] has its own server_check_url, its own server_check_url will be used instead of the server_check_url in section [general].
#
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试（测试结果为通过该节点访问此网页的 HTTP 延迟, 即 HTTP 响应时间与 HTTP 请求发起时间的差值），来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页的 HTTP 延迟。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
#
# The dns_exclusion_list contains the domains that disabled the placeholder IP(198.18.0.0/15) mapping mechanism. Domains that are not in the dns_exclusion_list have the placeholder IP mapping mechanism enabled and have the so called "resolve-on-remote" effect. The DNS query for domains in the dns_exclusion_list may or may not follow the settings in [dns] section.
# dns_exclusion_list 包含禁用占位 IP（198.18.0.0/15）映射机制的域。不在 dns_exclusion_list 中的域启用了占位 IP 映射机制，并具有所谓的“远程解析”效果。dns_exclusion_list 中域的 DNS 查询可能遵循或不遵循 [dns] 部分中的设置
#
# The enhanced_compatibility_ssid_list will be considered when global option 「Enhanced Compatibility」 is off in misc settings.
# 当杂项设置中的全局选项“增强兼容性”关闭时，将考虑enhanced_compatibility_ssid_list。
#
# The udp_whitelist contains the destination UDP port, empty means all the ports are in udp_whitelist. UDP packets(through Quantumult tunnel interface) with destination ports that are not in the udp_whitelist will be dropped and the ICMP(port unreachable) messages will be sent back. This setting has nothing to do with the filter rules or policies and has nothing to do with the proxy(server) port either.
# udp_whitelist 包含目标 UDP 端口，空表示所有端口都在 udp_whitelist 中。目标端口不在 udp_whitelist 中的 UDP 数据包（通过 Quantumult 隧道接口）将被丢弃，ICMP（端口不可达）消息将被发回。此设置与过滤规则或策略无关，也与代理（服务器）端口无关。

# The udp_drop_list contains the destination UDP port, the mechanism is similar to the udp_whitelist dropping the UDP packets, but will not send back the ICMP messages. Only UDP packets allowed by udp_whitelist can be caught by the udp_drop_list.
# udp_drop_list 包含目标 UDP 端口，其机制与 udp_whitelist 丢弃 UDP 数据包类似，但不会发回 ICMP 消息。只有 udp_whitelist 允许的 UDP 数据包才会被 udp_drop_list 捕获。
#
# The traffic to excluded_routes will not be handled by Quantumult. It is better to reboot your device after modification.
# Quantumult 不会处理到 excluded_routes 的流量。修改后最好重新启动设备。
#
# By default("loopback") when a domain rejected at DNS level the loopback IP response will be returned, you can change this behavior by setting dns_reject_domain_behavior to "no-error-no-answer" or "nxdomain" or "none". This will change the behavior to responding with NOERROR NOANSWER response or responding with NXDOMAIN response or none to disable the DNS level rejection feature. If you change the rejected domain to non-rejected(by changing configuration, filter or policy), it may take at most 10 seconds to take effect(TTL 10).
# 默认情况下（“loopback”），当 DNS 级别拒绝域时，将返回环回 IP 响应，您可以通过将 dns_reject_domain_behavior 设置为“no-error-no-answer”或“nxdomain”或“none”来更改此行为。这会将行为更改为使用 NOERROR NOANSWER 响应进行响应或使用 NXDOMAIN 响应或无响应以禁用 DNS 级别拒绝功能。如果您将拒绝的域更改为非拒绝（通过更改配置、过滤器或策略），则最多可能需要 10 秒才能生效（TTL 10）。
#
# The resource_parser_url sample can be found at https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
# resource_parser_url 示例可以在 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js 找到

# The server_check_timeout value will only be considered if it less than or equal to 5000 (milliseconds). This value is compared with the total duration of the checking process including the DNS query, TCP handshake, TLS handshake and the application layer HTTP session duration, so the total duration may significantly longer than the "TCP handshake" and the "HTTP session duration".
# server_check_timeout 值只有小于或等于 5000（毫秒）时才会被考虑。该值与检查过程的总时长（包括 DNS 查询、TCP 握手、TLS 握手和应用层 HTTP 会话时长）进行比较，因此总时长可能比“TCP 握手”和“HTTP 会话时长”长得多。

[general]
# > 用于设置图标显示
;profile_img_url=https://github.githubassets.com/images/modules/site/integrators/google.png
#
# > 功能强大的解析器，用于引用资源的转换
resource_parser_url = https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
#
# > 用于网页测试
network_check_url = http://www.apple.com/library/test/success.html
#
# > 用于节点延迟测试
server_check_url =http://www.google.com/generate_204
#
# > 延迟测试时使用的用户代理
server_check_user_agent = Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1
#
# > 服务器测试超时时间 (毫秒)
server_check_timeout = 5000
#
;doh_user_agent = Agent/1.0
#
# > 用于Check节点IP地址(以下geo_location_checker任选一个即可)
geo_location_checker = https://api.ip.sb/geoip/, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
#
# > 默认关闭根据wifi切换模式，如需开启，删除下方的"#"即可
;running_mode_trigger = filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
#
# > dns排除列表
dns_exclusion_list = *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me,*.pingan.com.cn, *.cmbchina.com
# >当某个域名被拒绝解析时应采取的行为
;dns_reject_domain_behavior = loopback
#
#> SSID（无线网络名称）列表
;ssid_suspended_list = LINK_22E174, LINK_22E175
#
;enhanced_compatibility_ssid_list = LINK_22E174, LINK_22E175
#
# >这里指定哪些UDP端口被允许通信。白名单中的端口将被排除在过滤规则之外
;udp_whitelist = 53, 123, 1900, 80-443
#
# >这里定义的端口范围内的所有端口都将被阻止通信
udp_drop_list = 1-442, 444-65535
#
# > 下列路径将不经过 Quantumult X 的处理
excluded_routes = 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8,239.255.255.250/32
# > UDP流量回退策略
;fallback_udp_policy = reject
# > 启用自动回复 ICMP（Internet Control Message Protocol）消息
;icmp_auto_reply = true
#
#
# The DNS servers fetched from current network(system) will always be used for better performance(you can disable this feature by using "no-system", but you should at least add one customized DNS server like "server=223.5.5.5").
# 为了获得更好的性能，将始终使用从当前网络（系统）获取的 DNS 服务器（您可以使用“no-system”禁用此功能，但您至少应该添加一个自定义 DNS 服务器，如“server=223.5.5.5”）。
#
# When no-ipv6 is set, the DNS module of Quantumult X Tunnel will directly let the AAAA query fail but still allow the A query from IPv6 DNS servers.
# 当设置no-ipv6时，Quantumult X Tunnel的DNS模块将直接让AAAA查询失败，但是仍然允许来自IPv6 DNS服务器的A查询。
#
# The result of query will only be used for evaluating filter or connecting through direct policy, when connecting through server the result will not be used and Quantumult will never know the destination IP of related domain.
# 查询结果仅用于评估过滤器或通过直接策略连接，当通过服务器连接时，结果将不被使用，并且 Quantumult 永远不会知道相关域的目标 IP。
#
# When prefer-doh3 is set, the DoH query will try DNS over HTTP3, if it fails then the query connection will fallback to the HTTP2. Since the multiplexing are supported by HTTP/2 and HTTP/3 connections, when you change this setting, it might not take effect immediately but you can reconnect the Quantumult X Tunnel or manually change your network environment to let it take effect immediately.
# 当设置了 prefer-doh3 时，DoH 查询将尝试通过 HTTP3 进行 DNS，如果失败，则查询连接将回退到 HTTP2。由于 HTTP/2 和 HTTP/3 连接支持多路复用，因此当您更改此设置时，它可能不会立即生效，但您可以重新连接 Quantumult X Tunnel 或手动更改网络环境以使其立即生效。
#
# When doh-server (DNS over HTTPS) or doq-server (DNS over QUIC) is set, system and all other non-encrypted regular(no specific domains are bond to it) servers will be ignored. The default port for DoQ is 853, if there is a mutual agreement to use another port like 456 for your DoQ, you can set it as quic://dns.example.com:456
# 当设置了 doh-server（DNS over HTTPS）或 doq-server（DNS over QUIC）时，系统和所有其他非加密的常规（没有特定域与其绑定）服务器将被忽略。DoQ 的默认端口是 853，如果双方同意为您的 DoQ 使用其他端口（例如 456），您可以将其设置为 quic://dns.example.com:456
#
# Multiple(concurrent query) doq-server(s) or doh-server(s) should be configured in one line and the URLs should be separated by comma. When both doq-server(s) and doh-server(s) are set, the query will be sent to all of the servers simultaneously.
# 多个（并发查询）doq-server 或 doh-server 应配置在一行中，URL 应以逗号分隔。当同时设置 doq-server 和 doh-server 时，查询将同时发送到所有服务器。
#

# If the iOS version is < iOS 13.0, the max number of doh-servers will be limited to 1. If the iOS version is < iOS 15.0, the max number of doh-servers will be limited to 2.
# 如果 iOS 版本 < iOS 13.0，则 doh-server 的最大数量将限制为 1。如果 iOS 版本 < iOS 15.0，则 doh-server 的最大数量将限制为 2。
#
# Specially directly set 127.0.0.1 for a domain is not allowed in here. if you want some domain(eg: example.com) to be 127.0.0.1, just add "host, example.com, reject" to the "filter_local" section. The reject action will return DNS response with 127.0.0.1 to the query.
# 特别地，这里不允许直接为域名设置 127.0.0.1。如果您希望某个域名（例如：example.com）为 127.0.0.1，只需将“host, example.com, replies”添加到“filter_local”部分。reject 操作将向查询返回带有 127.0.0.1 的 DNS 响应。
#
# The circumvent-ipv4-answer and circumvent-ipv6-answer are related to upstream DNS. If the A or AAAA result(IP) from upstream is matched by this field, the result will be ignored and marked as failed. If multiple queries sent to different upstream DNS servers, and the first responded upstream result is matched by this field, Quantumult X Tunnel DNS module will wait for other upstream servers' results.
# circumvent-ipv4-answer 和 circumvent-ipv6-answer 与上游 DNS 相关。如果上游的 A 或 AAAA 结果（IP）与此字段匹配，则结果将被忽略并标记为失败。如果向不同的上游 DNS 服务器发送多个查询，并且第一个响应的上游结果与此字段匹配，则 Quantumult X Tunnel DNS 模块将等待其他上游服务器的结果。
#
# The ? and * can be used in circumvent-ipv4-answer and circumvent-ipv6-answer.
# ? 和 * 可以在 circumvent-ipv4-answer 和 circumvent-ipv6-answer 中使用。
#
# If you are using ads related upstream DNS, please leave circumvent-ipv4-answer and circumvent-ipv6-answer empty.
# 如果您使用与广告相关的上游DNS，请将circumvent-ipv4-answer和circumvent-ipv6-answer留空。
#
[dns]

# > 强制某些域名解析时返回这些指定的IP地址，而不是实际的解析结果。
circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0, 61.160.148.90, 182.43.124.6, 124.236.16.201, 39.102.194.95, 36.135.17.248, 36.135.82.110, 39.105.1.17, 39.130.181.72, 39.130.181.73, 39.173.74.185, 47.92.198.202, 111.22.226.1, 111.28.0.32, 111.31.192.110, 111.44.246.131, 111.56.127.216, 111.63.132.170, 112.15.232.43, 112.17.14.211, 112.54.50.50, 117.156.25.11, 117.187.10.42, 120.202.17.103, 120.209.204.204, 120.222.19.204, 121.4.135.105,183.203.36.19, 183.207.72.18, 183.213.92.2, 183.220.145.129, 183.252.183.9, 211.137.133.69, 211.138.218.190, 211.139.25.61, 211.139.145.129, 218.201.25.129, 218.201.25.130, 218.203.122.98, 221.130.39.3
circumvent-ipv6-answer = ::
#
# > 启用这个选项，系统或应用程序优先使用DoH3来进行DNS解析
;prefer-doh3
# > 使用HTTPS协议的DNS-over-HTTPS服务器
; doh-server = https://dns.google/dns-query
; doh-server = https://dns.alidns.com/dns-query
; # 使用HTTPS协议的DNS-over-HTTPS服务器，地址为 dns.alidns.com
# > 禁用系统默认的DNS解析器或网络设置，使用自定义配置来处理网络请求。
no-system
# > 禁用 IPv6,
# QuantumultX开启IPV6方法，删去下面的「no-ipv6」，在「VPN」栏中，开启「兼容性增强」
no-ipv6
#
# > DNS服务器的IP地址
// 阿里云公共DNS服务器的IP
server = 223.5.5.5

// 114DNS公共DNS服务器的IP地址
server = 114.114.114.114

// 腾讯云公共DNS服务器的IP地址
server = 119.29.29.29

// 谷歌公共DNS服务器的IP地址
server = 8.8.8.8

; doq-server = quic://dns.adguard.com
; # 使用QUIC协议的DNS-over-QUIC服务器，地址为 dns.adguard.com
; # 被注释掉了，因此当前配置中不会生效

; doq-server = quic://dns1.example.com, quic://dns2.example.com
; # 使用QUIC协议的DNS-over-QUIC服务器，分别是 dns1.example.com 和 dns2.example.com
; # 被注释掉了，因此当前配置中不会生效

; doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
; # 使用QUIC协议的DNS-over-QUIC服务器，地址为 dns.adguard.com
; # 对于SSID1的网络将被排除
; # 被注释掉了，因此当前配置中不会生效

; doq-server = quic://dns.adguard.com, included_ssids=SSID2
; # 使用QUIC协议的DNS-over-QUIC服务器，地址为 dns.adguard.com
; # 仅对SSID2的网络生效
; # 被注释掉了，因此当前配置中不会生效

; doh-server = https://dns.alidns.com/dns-query
; # 使用HTTPS协议的DNS-over-HTTPS服务器，地址为 dns.alidns.com
; # 被注释掉了，因此当前配置中不会生效

; doh-server = https://exmaple1.com/dns-query, https://exmaple2.com/dns-query
; # 使用HTTPS协议的DNS-over-HTTPS服务器，地址为 https://exmaple1.com/dns-query 和 https://exmaple2.com/dns-query
; # 被注释掉了，因此当前配置中不会生效

; doh-server = https://223.6.6.6/dns-query, excluded_ssids=SSID1
; # 使用HTTPS协议的DNS-over-HTTPS服务器，地址为 https://223.6.6.6/dns-query
; # 对于SSID1的网络将被排除
; # 被注释掉了，因此当前配置中不会生效

; doh-server = https://223.5.5.5/dns-query, included_ssids=SSID2
; # 使用HTTPS协议的DNS-over-HTTPS服务器，地址为 https://223.5.5.5/dns-query
; # 仅对SSID2的网络生效
; # 被注释掉了，因此当前配置中不会生效

; server = 8.8.8.8:53, excluded_ssids=SSID1
; # 指定DNS服务器 8.8.8.8，端口 53，针对SSID1的网络将被排除
; # 被注释掉了，因此当前配置中不会生效

; server = 8.8.4.4:53, included_ssids=SSID2
; # 指定DNS服务器 8.8.4.4，端口 53，仅对SSID2的网络生效
; # 被注释掉了，因此当前配置中不会生效

; server = /example0.com/system
; # 将 example0.com 域名解析到 /system 地址
; # 被注释掉了，因此当前配置中不会生效

; server = /example1.com/8.8.4.4
; # 将 example1.com 域名解析到 IP 地址 8.8.4.4
; # 被注释掉了，因此当前配置中不会生效

# > Apple
server=/*.icloud.com/119.29.29.29
server=/*.icloud.com.cn/119.29.29.29

# > Tencent
server=/*.tencent.com/119.29.29.29
server=/*.weixin.com/119.29.29.29
server=/*.qq.com/119.29.29.29
server=/*.apple.com/119.29.29.29
server=/*.mzstatic.com/119.29.29.29
# > 机场
server=/*.51feitu.com/8.8.8.8

# > Cloudflare
server=/*.cloudflare.com/1.1.1.1

; server = /*.example2.com/223.5.5.5
; # 将所有以 .example2.com 结尾的域名解析到 IP 地址 223.5.5.5
; # 被注释掉了，因此当前配置中不会生效

; doh-server = /*.example3.com/https://doh.pub/dns-query, excluded_ssids=SSID2
; # 将以 .example3.com 结尾的域名使用 https://doh.pub/dns-query 进行解析
; # 对于SSID2的网络将被排除
; # 被注释掉了，因此当前配置中不会生效

; doq-server = /*.example4.com/quic://dns.adguard.com, excluded_ssids=SSID3
; # 将以 .example4.com 结尾的域名使用 quic://dns.adguard.com 进行解析
; # 对于SSID3的网络将被排除
; # 被注释掉了，因此当前配置中不会生效

; server = /example4.com/[2001:4860:4860::8888]:53
; # 将 example4.com 域名解析到 IPv6 地址 [2001:4860:4860::8888]，端口 53
; # 被注释掉了，因此当前配置中不会生效

; address = /example5.com/192.168.16.18
; # 将 example5.com 域名解析到 IP 地址 192.168.16.18
; # 被注释掉了，因此当前配置中不会生效

; address = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
; # 将 example6.com 域名解析到 IPv6 地址 [2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
; # 被注释掉了，因此当前配置中不会生效

; alias = /example7.com/another-example.com
; # 将 example7.com 域名解析为 another-example.com
; # 被注释掉了，因此当前配置中不会生效


#
# Static Policy:
# 静态策略指向您手动选择的候选服务器。
# Static policy points to the server in candidates you manually selected.

# Available Policy:
# 可用策略指向候选列表中第一个可用的服务器，基于 server_check_url（当策略被触发且策略结果不可用时，将立即启动并发 URL 延迟测试。如果此时没有网络请求使用该策略，则策略处于空闲状态，即使服务器宕机，也不会启动测试。此时，您可以通过手动启动测试来更新服务器状态，但没有实际意义）。
# Available policy points to the first available server in candidates based on `server_check_url` (concurrent URL latency test will be immediately launched when the policy has been triggered and the policy result is unavailable. If no network request is taking the policy at that time, that means the policy is in the idle state and the test won't be launched even if the server is down. At that time you can update the server status by manually launching the test, but it doesn't make any sense).

# Round-Robin Policy:
# 轮询策略指向候选列表中的下一个服务器，用于下一个连接。
# Round-robin policy points to the next server in candidates for the next connection.

# Dest-Hash Policy:
# 目标哈希策略根据哈希函数指向服务器，该函数使用目标地址（域名或 IP 地址）作为输入。此策略特别适用于需要会话持久性的用例。添加或删除服务器可能会改变结果。
# Dest-hash policy points to the server according to a hash function that uses the destination address (domain or IP) as input. This policy is particularly useful for use cases that require session persistence. Adding or removing servers from the policy may change the results.

# URL-Latency-Benchmark Policy:
# URL 延迟基准策略指向具有最佳（考虑了参数 tolerance 毫秒）URL 延迟结果的服务器。当用户在 Quantumult X 容器应用中手动启动 URL 测试时，策略结果也会更新。这种策略有一个名为 check-interval（秒）的参数，如果策略被任何请求激活，则将考虑该间隔。如果 alive-checking 为 true，即使策略处于空闲状态，间隔仍将被考虑，并且基准测试将被启动。
# URL-latency-benchmark policy points to the server with the best (the param tolerance ms will be considered) URL latency result. When the user starts the URL test in Quantumult X container app manually, the policy result will also be updated. This type of policy has a param called check-interval (seconds), if this policy has been activated by any request then the interval will be considered. If the alive-checking is true, then even if the policy is in the idle state the interval will still be considered and the benchmark will be launched.

# SSID Policy:
# SSID 策略根据网络环境指向服务器。
# SSID policy points to the server depending on the network environment.

# Resource-Tag-Regex and Server-Tag-Regex:
# 参数 resource-tag-regex 和 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
# Param resource-tag-regex and server-tag-regex only work for static, available, and round-robin type of policies.
# 策略分流
[policy]
; static = policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png
; # 静态策略，指向手动选择的服务器（Sample-A、Sample-B、Sample-C），并设置了图标 URL
; # Static policy, points to manually selected servers (Sample-A, Sample-B, Sample-C) with an image URL set

; available = policy-name-2, Sample-A, Sample-B, Sample-C
; # 可用策略，指向候选列表中第一个可用的服务器（Sample-A、Sample-B、Sample-C）
; # Available policy, points to the first available server in the candidate list (Sample-A, Sample-B, Sample-C)

; round-robin = policy-name-3, Sample-A, Sample-B, Sample-C
; # 轮询策略，指向候选列表中的下一个服务器（Sample-A、Sample-B、Sample-C）
; # Round-robin policy, points to the next server in the candidate list (Sample-A, Sample-B, Sample-C)

; ssid = policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
; # SSID 策略，根据网络环境指向服务器。特定 SSID (LINK_22E171 和 LINK_22E172) 指向不同的服务器
; # SSID policy, points to servers depending on the network environment. Specific SSIDs (LINK_22E171 and LINK_22E172) point to different servers

; static = policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
; # 静态策略，指向手动选择的服务器，使用资源标签和服务器标签的正则表达式进行过滤，并设置了图标 URL
; # Static policy, points to manually selected servers, using resource-tag-regex and server-tag-regex for filtering, with an image URL set

; available = policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
; # 可用策略，指向候选列表中第一个可用的服务器，使用资源标签和服务器标签的正则表达式进行过滤
; # Available policy, points to the first available server in the candidate list, using resource-tag-regex and server-tag-regex for filtering

; round-robin = policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example
; # 轮询策略，指向候选列表中的下一个服务器，使用资源标签和服务器标签的正则表达式进行过滤
; # Round-robin policy, points to the next server in the candidate list, using resource-tag-regex and server-tag-regex for filtering

; dest-hash = policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example
; # 目标哈希策略，根据目标地址哈希函数指向服务器，使用资源标签和服务器标签的正则表达式进行过滤
; # Dest-hash policy, points to the server based on the destination address hash function, using resource-tag-regex and server-tag-regex for filtering

; url-latency-benchmark = policy-name-9, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, alive-checking=false, tolerance=0
; # URL 延迟基准策略，指向具有最佳延迟结果的服务器，使用资源标签和服务器标签的正则表达式进行过滤，设置检查间隔为 600 秒，alive-checking 为 false，容忍度为 0 毫秒
; # URL-latency-benchmark policy, points to the server with the best latency result, using resource-tag-regex and server-tag-regex for filtering, with check-interval set to 600 seconds, alive-checking set to false, and tolerance set to 0 ms

#
# 参数 "tag" 和 "enabled" 是可选的。
# 所有类型的远程资源的默认同步间隔为 86400 秒。
# 可以设置 update-interval=172800 自定义自动同步间隔（秒），负数表示禁用自动同步。
# 如果设置了 require-devices，这行配置仅在当前 Quantumult 设备 ID 属于 require-devices 时加载。Quantumult 设备 ID 可以在 "设置 - 杂项设置 - 关于" 中找到。
# Params "tag" and "enabled" are optional.
# The default sync interval for all kinds of remote resources is 86400 seconds.
# You can set update-interval=172800 to customize your auto sync interval (seconds), a negative number means disable auto sync.
# If require-devices is set, this line of configuration will only be loaded when the current Quantumult device ID belongs to require-devices. The Quantumult device ID can be found in "Settings - Misc Settings - About".
#


static=手动选择, resource-tag-regex=🐰, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Category_Balloon.png
url-latency-benchmark=自动选择, resource-tag-regex=🐰, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Area.png
static=美国节点, resource-tag-regex=🐰, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|Los|日台|日|韩|新)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
static=日本节点, resource-tag-regex=🐰, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
static=狮城节点, resource-tag-regex=🐰, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|美)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
static=香港节点, resource-tag-regex=🐰, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
static=台湾节点, resource-tag-regex=🐰, server-tag-regex=(?=.*(台|TW|(?i)Taiwan|(?i)Taipei))^((?!(港|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
static=其他节点, resource-tag-regex=🐰, server-tag-regex=^((?!(?i)(美国|USA|United States|US|日本|Japan|JP|香港|Hong Kong|HK|台湾|Taiwan|TW|新加坡|Singapore|SG|套餐|台北|Taipei|CN|MY|KR)).)*$, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/America_Map.png
static=CF节点, resource-tag-regex=💌, server-tag-regex=US, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Cloudflare.png
static=苹果服务, direct, 香港节点, 台湾节点, 美国节点, 日本节点, 狮城节点, proxy, 其他节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
static=Telegram, 🇺🇸 US 08, 🇺🇸 US 07, 🇺🇸 US 06, 🇺🇸 US 05, 🇺🇸 US 04, 🇺🇸 US 03, 🇺🇸 US 02, 🇺🇸 US 01, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
static=Github, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/github_00.png
static=Apple TV+, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_TV.png
static=哔哩哔哩, direct, 香港节点, 台湾节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili.png
static=Disney+, 自动选择, 手动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney+.png
static=Netflix, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/netflix.png
static=YouTube Music, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/YouTubeMusic.png
static=TikTok, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png
static=OpenAi, 美国节点, 手动选择, CF节点, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/OpenAI.png
static=Facebook, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png

static=Instagram, 手动选择, 自动选择, CF节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png
static=Twitter, 手动选择, 自动选择, CF节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/X.png
static=国际媒体, 自动选择, 台湾节点, 香港节点, 日本节点, 美国节点, 狮城节点, 手动选择, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
static=谷歌服务, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
static=微软服务, direct, proxy, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Microsoft.png
static=全球直连, direct, proxy, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Category_Globe.png
static=全球加速, 自动选择, 手动选择, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 其他节点, CF节点, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=广告拦截, reject, proxy, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/AdGuard.png
static=漏网之鱼, 手动选择, 自动选择, 美国节点, 日本节点, 狮城节点, 香港节点, 台湾节点, 其他节点, CF节点, 133, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Socloud.png

# 机场订阅
[server_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.snippet, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.snippet, opt-parser=true, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.snippet, update-interval=-1, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server-complete.snippet, tag=Sample-02, as-policy=static, img-url=http://example.com/icon.png, enabled=false
;https://example.com/server.snippet, tag=Sample-03, img-url=http://example.com/icon.png, require-devices=ID1, ID2, enabled=false

#
# Params "tag", "force-policy" and "enabled" are optional.
# When there is a force-policy, then the policy in filter of remote resource will be ignored and the force-policy will be used.
#
[filter_remote]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list, tag=GlobalMedia, force-policy=国际媒体, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag=Apple, force-policy=苹果服务, update-interval=172800, opt-parser=true, enabled=true
https://limbopro.com/Adblock4limbo.list, tag=Adblock4limbo, force-policy=广告拦截, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Twitter/Twitter.list, tag=Twitter, force-policy=Twitter, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/TikTok/TikTok.list, tag=TikTok, force-policy=TikTok, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Threads/Threads.list, tag=Threads, force-policy=Facebook, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Netflix/Netflix.list, tag=Netflix, force-policy=Netflix, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Microsoft/Microsoft.list, tag=Microsoft, force-policy=微软服务, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Instagram/Instagram.list, tag=Instagram, force-policy=Instagram, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Disney/Disney.list, tag=Disney, force-policy=Disney+, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Gemini/Gemini.list, tag=Gemini, force-policy=谷歌服务, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Facebook/Facebook.list, tag=Facebook, force-policy=Facebook, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/GoogleFCM/GoogleFCM.list, tag=GoogleFCM, force-policy=谷歌服务, update-interval=172800, opt-parser=false, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Google/Google.list, tag=Google, force-policy=谷歌服务, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/ChinaMax/ChinaMax.list, tag=chinamax, force-policy=全球直连, update-interval=172800, opt-parser=false, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/GitHub/GitHub.list, tag=Github, force-policy=Github, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Telegram/Telegram.list, tag=Telegram, force-policy=Telegram, update-interval=172800, opt-parser=true, enabled=true

https://raw.githubusercontent.com/ddgksf2013/Filter/master/Unbreak.list, tag=规则修正, force-policy=全球直连, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Cats-Team/AdRules/main/qx.conf, tag=广告终结者, force-policy=广告拦截, update-interval=172800, opt-parser=true, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/WeChat/WeChat.list, tag=微信直连, force-policy=全球直连, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list, tag=国内网站, force-policy=全球直连, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TikTok/TikTok.list, tag=海外抖音, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/GoogleVoice.list, tag=Google Voice, force-policy=谷歌服务, update-interval=172800, opt-parser=true, enabled=true
https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/OpenAI/OpenAI.list, tag=OpenAi, force-policy=OpenAi, update-interval=172800, opt-parser=true, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/Global/Global.list, tag=Global, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Spotify/Spotify.list, tag=Spotify音乐, force-policy=香港节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/Streaming.list, tag=国际媒体, force-policy=国际媒体, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/StreamingSE.list, tag=哔哩哔哩, force-policy=哔哩哔哩, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy.list, tag=全球加速, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true

# 用于定义和启用特定的过滤规则
FILTER_LAN, tag=LAN, force-policy=direct, enabled=true
FILTER_REGION, tag=CN, force-policy=direct, enabled=true

# 引入外部过滤规则
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/filter.snippet, tag=Sample, force-policy=your-policy-name, enabled=true
;https://example.com/filter.snippet, tag=Sample, force-policy=your-policy-name, require-devices=ID1, ID2, enabled=true

#参数说明
# tag: 可选，用于给这个规则集打标签，方便管理和识别。
# enabled: 可选，设置为 true 时启用该规则集，为 false 时禁用。
# force-policy: 强制应用某个策略名称，确保所有流量都符合该策略。
# require-devices: 限定只有指定的设备ID可以使用这个规则集。
# 这些配置项可以帮助你更灵活地管理和应用过滤规则，以适应不同的需求和设备环境。
# Params "tag" and "enabled" are optional.



#覆写远程订阅
[rewrite_remote]
https://limbopro.com/Adblock4limbo.conf, tag=Adblock4limbo, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/QX.snippet, tag=Sub Store, update-interval=172800, opt-parser=true, enabled=true

# ======= 会员解锁 ======= #
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJs, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Bilibili.conf, tag=哔哩哔哩广告净化@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/UnlockVip/Spotify.conf, tag=Spotify音乐VIP[音质≤高]@app2smile, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/dev/raw/master/ForOwnUse.conf, tag=墨鱼专属VIP@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/CaiYunAds.conf, tag=彩云天气净化+SVIP@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true


# ======= 广告净化 ======= #
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/StartUp.conf, tag=墨鱼去开屏2.0@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zheye/zheye.snippet, tag=知乎去广告及体验增强@blackmatrix7, update-interval=86400, opt-parser=false, enabled=true
https://github.com/app2smile/rules/raw/master/module/tieba-qx.conf, tag=百度贴吧去广告@app2smile, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Applet.conf, tag=微信小程序去广告@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/YoutubeAds.conf, tag=油管去广告@Maasea, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Weibo.conf, tag=微博去广告@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Ximalaya.conf, tag=喜马拉雅去广告[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Amap.conf, tag=高德地图净化[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Netease.conf, tag=网易云音乐去广告[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://gist.githubusercontent.com/ddgksf2013/beec132ca0c3570ffa0cf331bce8f82a/raw/baidumap.adblock.conf, tag=百度地图净化[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true


# ======= 网页优化 ======= #
https://github.com/ddgksf2013/Rewrite/raw/master/Html/Q-Search.conf, tag=Safari超级搜索@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/Html/Douban.conf, tag=豆瓣网页观影快捷跳转@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Html/General.conf, tag=神机重定向@DivineEngine, update-interval=86400, opt-parser=false, enabled=true


# ======= 功能增强 ======= #
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/XiaoHongShu.conf, tag=小红书净化+去水印@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://gist.githubusercontent.com/ddgksf2013/f43026707830c7818ee3ba624e383c8d/raw/baiduCloud.adblock.js, tag=百度网盘净化@ddgksf2013, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Function/UnblockURLinWeChat.conf, tag=微信解锁被屏蔽的URL@zZPiglet, update-interval=86400, opt-parser=false, enabled=true
#
; https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-import-rewrite.snippet, tag=Sample, enabled=true
; # 从指定 URL 加载 rewrite 配置文件，设置标签为 Sample，并启用此配置
; # Loads the rewrite configuration file from the specified URL, tags it as Sample, and enables this configuration

; https://example.com/rewrite.snippet, tag=Sample, require-devices=ID1, ID2, enabled=true
; # 从指定 URL 加载 rewrite 配置文件，设置标签为 Sample，仅在设备 ID 为 ID1 或 ID2 时加载，并启用此配置
; # Loads the rewrite configuration file from the specified URL, tags it as Sample, loads only if device ID is ID1 or ID2, and enables this configuration

#
# 只有 obfs=http、obfs=ws、obfs=wss 可以有可选的 "obfs-uri" 字段。
# The obfs-host 参数在 wss 中将用于 TLS 握手和 HTTP 头部的 host 字段，如果 wss 没有设置 obfs-host，则使用服务器地址。
# # Only obfs=http, obfs=ws, obfs=wss can have an optional "obfs-uri" field.
# The obfs-host parameter in wss will be used for TLS handshake and HTTP header host field; if obfs-host is not set for wss, the server address will be used.

# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以由 v2ray-plugin (mux = 0) 或 v2ray-core 或 trojan-go 部署。
# # When using obfs=ws and obfs=wss, the server side can be deployed by v2ray-plugin with mux = 0, v2ray-core, or trojan-go.

# 值得注意的是，shadowsocks 的 udp-over-tcp 仅支持使用 shadowsocksr python 版本部署的服务器，其他版本仅支持 UDP 中继。如果您将 udp-relay 和 udp-over-tcp 结合使用，必须确保您的服务器使用 shadowsocksr python 版本部署。
# # It is worth noting that the udp-over-tcp for shadowsocks is only supported by servers deployed with the shadowsocksr python version; other versions only support the UDP relay itself. If combining udp-relay and udp-over-tcp for shadowsocks, ensure your server is deployed with shadowsocksr python version.

# 值得注意的是 obfs=tls 与 obfs=over-tls 不同。obfs=tls 是与 shadowsocks 项目相关的混淆插件，仅对 TLS 协议进行混淆。obfs=over-tls 是 TLS 协议。Quantumult X 支持这两种混淆方法。
# # It is worth noting that obfs=tls is different from obfs=over-tls. obfs=tls is an obfuscation plugin related to the shadowsocks project, which obfuscates the TLS protocol. obfs=over-tls is the TLS protocol. Quantumult X supports both methods for shadowsocks.

# obfs 插件 tls1.2_ticket_auth 比 tls1.2_ticket_fastauth 和 obfs tls 多一个 RTT，建议使用 tls1.2_ticket_fastauth。
# # The obfs plugin tls1.2_ticket_auth has one more RTT than tls1.2_ticket_fastauth and obfs tls, so it's better to use tls1.2_ticket_fastauth instead.

# 方法 chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中效果相同。
# # The method chacha20-ietf-poly1305 and chacha20-poly1305 have the same effect in VMess configuration.

# tls-cert-sha256 或 tls-pubkey-sha256 用于 SSL 钉扎可以通过以下命令生成：
# openssl x509 -noout -fingerprint -sha256 -inform pem -in your-cert.pem
# openssl x509 -inform pem -pubkey -noout < your-cert.pem | openssl pkey -pubin -outform der | openssl dgst -sha256
# # The tls-cert-sha256 or tls-pubkey-sha256 used for SSL pinning can be generated by openssl using the following commands:
# # openssl x509 -noout -fingerprint -sha256 -inform pem -in your-cert.pem
# # openssl x509 -inform pem -pubkey -noout < your-cert.pem | openssl pkey -pubin -outform der | openssl dgst -sha256

# 如果 tls-verification 设置为 false，则 tls-cert-sha256 和 tls-pubkey-sha256 将被忽略。
# 如果设置了 tls-pubkey-sha256，则 tls-cert-sha256 将被忽略。
# # If tls-verification is set to false, then tls-cert-sha256 and tls-pubkey-sha256 will be ignored.
# # If tls-pubkey-sha256 is set, then tls-cert-sha256 will be ignored.

# 可选的 tls-alpn 为 TLS 是 ALPN 扩展内容的十六进制格式，例如："02:68:32:08:68:74:74:70:2f:31:2e:31" 或 "02683208687474702f312e31"，表示 ALPN "h2" 和 "http/1.1"（{2, 'h', '2', 8, 'h', 't', 't', 'p', '/', '1', '.', '1'}）
# # The optional tls-alpn for TLS is the hex format of the ALPN extension content, e.g., "02:68:32:08:68:74:74:70:2f:31:2e:31" or "02683208687474702f312e31", which represents ALPN "h2" and "http/1.1" ({2, 'h', '2', 8, 'h', 't', 't', 'p', '/', '1', '.', '1'})

# tls-no-session-ticket 参数是可选的，仅用于特殊用途。默认启用会话票证（tls-no-session-ticket=false）。如果要禁用会话票证，只需设置 tls-no-session-ticket=true，但请注意，如果服务器支持，会话仍可能会从会话 ID 中重用。
# # The tls-no-session-ticket param for TLS is optional, and it's only for special use cases. By default, session ticket is enabled (tls-no-session-ticket=false). If you want to disable session ticket, just set tls-no-session-ticket=true, but keep in mind that the session may still be reused from session ID for new connection if server supports it.

# tls-no-session-reuse 参数是可选的，仅用于特殊用途。默认启用会话重用（tls-no-session-reuse=false）。如果要禁用会话重用，只需设置 tls-no-session-reuse=true，这将强制 Quantumult X 对每个新连接执行完整的 TLS 握手。
# # The tls-no-session-reuse param for TLS is optional, and it's only for special use cases. By default, session reuse is enabled (tls-no-session-reuse=false). If you want to disable session reuse, set tls-no-session-reuse=true, which will force Quantumult X to perform a full TLS handshake for every new connection.

# tls13 参数已被弃用（自 v1.0.26 起），TLS 1.3 版本始终被支持，无论您设置什么。
# # The tls13 param has been deprecated (deprecated since v1.0.26), and TLS version 1.3 is always supported no matter what you set.

# obfs=http 对 shadowsocks 协议遵循 shadowsocks 项目的 simple-obfs 插件。obfs=http 对 VMess 协议遵循 V2Ray 的实现。这两种混淆完全不同。有时为了符合您的特殊服务器设置（“shadowsocks” + “VMess 的 http 混淆”或“VMess” + “shadowsocks 的 http 混淆”），您可以设置 obfs=vemss-http（针对 shadowsocks 协议），或 obfs=shadowsocks-http（针对 vmess 协议）。后者很少发生，而前者发生在服务器端由 V2Ray（或类似程序）部署的 shadowsocks 协议和 V2Ray 内置的 http 混淆时。
# # The obfs=http for shadowsocks protocol follows the shadowsocks project's simple-obfs plugin. The obfs=http for VMess protocol follows V2Ray's implementation. These 2 obfuscations are totally different. Sometimes to comply with your special server settings (“shadowsocks” + “http obfuscation of VMess” or “VMess” + “http obfuscation of shadowsocks”), you may set obfs=vemss-http for shadowsocks protocol, or obfs=shadowsocks-http for vmess protocol. The latter rarely happens, and the former happens when the server side is deployed by V2Ray (or similar programs) with shadowsocks protocol and V2Ray built-in http obfuscation.

#服务器远程订阅
[server_local]
# Shadowsocks 配置项
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=ss-obfs-http-01
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=ss-obfs-http-02
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=ss-obfs-tls-01
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-cert-sha256=b0088370d6c8e02d6e38c443abf81be2aaf1e18f00435aaf0b39852c338f7aaa, fast-open=false, udp-relay=false, tag=ss-tls-01
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=ss-tls-02
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=ss-tls-03
;shadowsocks=example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=ssr
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=ss-ws-01
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-02
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-tls-01
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=ss-ws-tls-02
;shadowsocks=example.com:80, method=chacha20, password=pwd, fast-open=false, udp-relay=true, udp-over-tcp=true, tag=ss-udp-over-tcp
#
# vmess 配置项
# To disable aead header for vmess, just set aead=false, the default value is true. If your server(V2Ray) version is less than v4.28 please set aead=false
;vmess=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vmess-01
;vmess=example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, aead=false, tag=vmess-02
;vmess=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, fast-open=false, udp-relay=false, tag=vmess-tls-01
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, fast-open=false, udp-relay=false, tag=vmess-tls-02
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, tls13=true, fast-open=false, udp-relay=false, tag=vmess-tls-03
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-01
;vmess=192.168.1.1:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-02
;vmess=example.com:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-01
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-02
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=vmess-ws-tls-03
#
# vless 配置项
# The method field for vless should be none.
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vless-01
;vless=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, fast-open=false, udp-relay=false, tag=vless-tls-01
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vless-http
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, fast-open=false, udp-relay=false, tag=vless-tls-02
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, tls13=true, fast-open=false, udp-relay=false, tag=vless-tls-03
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-01
;vless=192.168.1.1:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-02
;vless=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-tls-01
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-tls-02
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=vless-ws-tls-03
#
# http 配置项
# The obfs field is not supported for http
;http=example.com:80,fast-open=false, udp-relay=false, tag=http-01
;http=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http-02
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls-01
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=http-tls-02
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=http-tls-03
#
# socks5 配置项
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=socks5-tls-03
#
# trojan 配置项
# The obfs field is only supported with websocket over tls for trojan. When using websocket over tls you should not set over-tls and tls-host options anymore, instead set obfs=wss and obfs-host options.
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-03
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-04
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-cert-sha256=b0088370d6c8e02d6e38c443abf81be2aaf1e18f00435aaf0b39852c338f7aaa, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-05
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-06
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-07
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05

[filter_local]
# > 一些比较容易忽视的分流
host, ad.12306.cn, direct
host, gg.caixin.com, direct
host, sdkapp.uve.weibo.com, direct
host-suffix, ucweb.com, direct
host-suffix, kuwo.cn, direct
host, ntb.lanjie100.com, reject

;user-agent, ?abc*, proxy
;host, www.google.com, proxy
;host-keyword, adsite, reject
;host-wildcard, *.goo?le.com, proxy
;host-suffix, googleapis.com, proxy
;host-suffix, googleapis.com, proxy, force-cellular
;host-suffix, googleapis.com, proxy, multi-interface
;host-suffix, googleapis.com, proxy, multi-interface-balance
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

# > 本地策略
host-suffix, local, direct

ip-cidr, 10.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
ip-cidr, 182.254.116.0/24, direct
ip6-cidr, fe80::/10, direct
;ip6-cidr, 2001:4860:4860::8888/32, direct
;ip-cidr, 10.0.0.0/8, direct
;ip-cidr, 127.0.0.0/8, direct
;ip-cidr, 172.16.0.0/12, direct
;ip-cidr, 192.168.0.0/16, direct
;ip-cidr, 224.0.0.0/24, direct
;geoip, cn, direct
;geoip, cn, direct, force-cellular
;ip-asn, 6185, proxy
# You can add below host-keyword rule to skip the DNS query for all the non-matched hosts. Pure IP requests won't be matched by the host related rules.
;host-keyword, ., proxy
# 您可以添加以下 host-keyword 规则，以跳过所有不匹配的主机的 DNS 查询。纯 IP 请求不会被与主机相关的规则匹配。
;host-keyword, ., proxy

# geoip
geoip, cn, direct
# > 兜底策略
final, proxy


#
# The "reject" returns HTTP status code 404 with no content. This type of rewrite has some kind of dynamic delay (0~5 seconds) mechanism of response for repeated requests in a short period of time. The less the repetition, the shorter the delay (0). The more the repetition, the greater the delay (5).
# The "reject-200" returns HTTP status code 200 with no content.
# The "reject-img" returns HTTP status code 200 with content of 1px gif.
# The "reject-dict" returns HTTP status code 200 with content of empty json object.
# The "reject-array" returns HTTP status code 200 with content of empty json array.
# The "request-header" works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The "echo-response" just reply back the body of the content type response for matched URL, the body file should be saved at "On My iPhone - Quantumult X - Data".
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the "rewrite" is body related, so you should not handle them by yourself. The max supported original response body size is 4 MB(iOS 13+) for script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix "$".
# Supports: $request.sessionIndex, $request.scheme, $request.method, $request.url, $request.path, $request.headers,$response.sessionIndex, $response.statusCode, $response.headers, $response.body
# The $request.sessionIndex is equal to $response.sessionIndex when the response is related to the request. The sessionIndex has nothing to do with the index of TCP records in the orange "Activity" panel.
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file.
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body, script-echo-response and script-analyze-echo-response should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X
# The difference between script-analyze-echo-response and script-echo-response is that the former will wait for the request body.
#
# The HTTP(HTTPS) request will be matched if the URL and the headers are both matched for the url-and-header rewrite (The URL will be evaluated first, and if it is not matched then the headers will not be evaluated at all). The string of the headers to compare contains the method, path and key-value headers.
#
#rewrite 复写本地订阅
[rewrite_local]
^https?:\/\/(www.)?(g|google)\.cn url 302 https://www.google.com
;^http://example\.com/resource1/1/ url reject
;^http://example\.com/resource1/2/ url reject-img
;^http://example\.com/resource1/3/ url reject-200
;^http://example\.com/resource1/4/ url reject-dict
;^http://example\.com/resource1/5/ url reject-array
;^http://example\.com/resource2/ url 302 http://example.com/new-resource2/
;^http://example\.com/resource3/ url 307 http://example.com/new-resource3/
;^http://example\.com/resource4/ url request-header ^GET /resource4/ HTTP/1\.1(\r\n) request-header GET /api/ HTTP/1.1$1
;^http://example\.com/resource4/ url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36$2
;^http://example\.com/resource5/ url request-body "info":\[.+\],"others" request-body "info":[],"others"
;^http://example\.com/resource5/ url response-body "info":\[.+\],"others" response-body "info":[],"others"
;^http://example\.com/resource5/ url echo-response text/html echo-response index.html
;^http://example\.com/resource6/ url script-response-body response-body.js
;^http://example\.com/resource7/ url script-echo-response script-echo.js
;^http://example\.com/resource8/ url script-response-header response-header.js
;^http://example\.com/resource9/ url script-request-header request-header.js
;^http://example\.com/resource10/ url script-request-body request-body.js
;^http://example\.com/resource1/1/ \r\nUser-Agent: example-agent url-and-header reject
;^http://example\.com/resource1/1/ ^POST url-and-header reject


#
# If the require-devices is set, this line of configuration will only be loaded when current Quantumult device ID belongs to the require-devices. The Quantumult device ID can be found in "Settings - Misc Settings - About".
# The $task.fetch() compose a HTTP request and deal with the response, only text body is supported. A $task.fetch() can be embeded in the completion handler of another $task.fetch(), if you want serial requests not current requests.
# The scripts should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# The default HTTP request timeout is 10 seconds.
#
# Supports 5 or 6 fields of cron excluding the command field. The event-network will be triggered when network changed. The event-interaction will be triggered when user tapped a UIAction. The event related task only can be triggered when the Quantumult X Tunnel is running.
#
[task_local]
event-network https://raw.githubusercontent.com/xream/scripts/main/surge/modules/network-info/net-lsp-x.js, tag=网络信息变化 𝕏, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png, enabled=true
event-interaction https://raw.githubusercontent.com/xream/scripts/main/surge/modules/network-info/net-lsp-x.js, tag=网络信息 𝕏, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/switch-check-google.js, tag=Google 切换, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/switch-check-ytb.js, tag=YouTube 切换, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube_Letter.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/disney-ui-check.js, tag=Disneyᐩ 查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/switch-check-disneyplus.js, tag=Disneyᐩ 切换, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/nf-ui-check.js, tag=Netflix 查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix_Letter.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/switch-check-nf.js, tag=Netflix 切换, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix_Letter.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/server-info-plus.js, tag=节点信息Plus, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/ipInfo.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/ytb-ui-check.js, tag=YouTube 查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube_Letter.png, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/geo_location.js, tag=GeoIP 查询, img-url=location.fill.viewfinder.system, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/traffic-check.js, tag=策略流量查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png, enabled=true

# > 请手动添加下面的订阅（流媒体Task订阅集合）
; https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/UI-Action.json
# > 流媒体解锁查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=arrowtriangle.right.square.system, enabled=true
;* * * * * sample-task.js
;* * * * * sample-task2.js, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag=Sample, enabled=true
;* * * * * sample-task3.js, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag=Sample, require-devices=ID1, ID2, enabled=true
;event-network sample-task3.js
;event-interaction sample-task4.js
#
# Just like any web browser, http(s) url string after # is never sent to the server. You can add # to the script http(s) url to append customized params, and using API $environment.sourcePath to get the whole path (https://example.com/sample.js#this-is-not-sent-to-server&key1=value1&key2=value2) and extract the customized params in the script by yourself.
#
;* * * * * https://example.com/sample.js#this-is-not-sent-to-server&key1=value1&key2=value2, tag=Sample, enabled=true


#
# Deploy a local HTTP server and use JavaScript for data processing.
# If the require-devices is set, this line of configuration will only be loaded when current Quantumult device ID belongs to the require-devices. The Quantumult device ID can be found in "Settings - Misc Settings - About".
# The input variables are $reqeust.url, $reqeust.path, $reqeust.headers, $reqeust.body
# The output using $done like $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") to sendback the response.
# Further more you can use a signature or any other validation method to verify if the request is legitimate.
# After the deployment you should visit it through http://127.0.0.1:9999/your-path/your-api/.
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 如果设置了 `require-devices`，则只有当当前 Quantumult 设备 ID 属于 `require-devices` 时，此配置行才会被加载。Quantumult 设备 ID 可以在 "设置 - 杂项设置 - 关于" 中找到。
# 输入变量包括 $request.url、$request.path、$request.headers、$request.body
# 使用 $done，如 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"这里是一个字符串") 来发送响应。
# 另外，你可以使用签名或其他验证方法来验证请求是否合法。
# 部署完成后，你应该通过 http://127.0.0.1:9999/your-path/your-api/ 访问它。

[http_backend]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-backend.js, tag=fileConverter, path=^/example/v1/
;preference.js, tag=userPreference, path=^/preference/v1/, img-url=https://example.com, enabled=true
;sample.js, tag=sample, path=^/sample/v1/, require-devices=ID1, ID2, enabled=true
;convert.js, tag=fileConverter, path=^/convert/v1/
# > Boxjs设置，改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按风车-更新，然后重启代理
# > BoxJs相关教程参考「https://docs.boxjs.app」
;https://raw.githubusercontent.com/chavyleung/scripts/master/chavy.box.js, host=boxjs.com, tag=BoxJS, path=^/, enabled=false


#
# If the source IP of the TCP connection is matched by the skip_src_ip, the hostname will not be evaluated. The wildcard * and ? are supported.
# If the destination IP of the TCP connection is matched by the skip_dst_ip, the hostname will not be evaluated. The wildcard * and ? are supported.
# Only the TLS SNI or destination address in "hostname" will be handled by MitM. The wildcard * and ? are supported.
#
# Important !!! You should always keep your CA passphrase and p12 private.
#
#
# 如果 TCP 连接的源 IP 地址与 `skip_src_ip` 匹配，则不会对主机名进行评估。支持通配符 `*` 和 `?`。
# 如果 TCP 连接的目标 IP 地址与 `skip_dst_ip` 匹配，则不会对主机名进行评估。支持通配符 `*` 和 `?`。
# 只有 TLS 的 SNI 或 "hostname" 中的目标地址会被 MitM 处理。支持通配符 `*` 和 `?`。
#
# 重要！！！请始终保持 CA 密码短语和 `.p12` 文件的私密性。

[mitm]
# passphrase和p12代为证书&主机名部分, 更新配置前可把旧的配置中passphrase和p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书
; 设置用于加密密钥文件的密码短语。如果设置了此项，使用密钥文件时需要输入密码。
; 指定包含证书和私钥的 `.p12` 文件的路径。如果设置了此项，Quantumult X 将使用该文件进行 MITM 代理。
;passphrase =
;p12 =

; 是否跳过对证书的验证。如果设置为 `true`，Quantumult X 将不验证证书的有效性，通常用于开发和测试环境。
skip_validating_cert = true

; 指定哪些源 IP 地址的流量将被排除在 MITM 代理之外。这些 IP 地址的流量不会进行中间人攻击。
;skip_src_ip = 192.168.1.5, 192.168.1.6

; 指定哪些目标 IP 地址的流量将被排除在 MITM 代理之外。这些 IP 地址的流量不会进行中间人攻击。
;skip_dst_ip = 17.0.0.1

; 指定哪些主机名将被排除在 MITM 代理之外。通配符 `*` 表示匹配所有子域名。
;hostname = *.example.com, *.sample.com, non-existed-domain.com, *.non-connected-domain.com
hostname = -*.apple.com, -consumer.fcbox.com, -*huami.com, -weather-data.apple.com, -*amemv.com, -*snssdk.com, -www.google.com

; 是否强制使用 SNI 域名。SNI（Server Name Indication）用于在 TLS 握手时指定目标主机名。如果设置为 `true`，Quantumult X 将强制使用 SNI 域名。
force_sni_domain_name = false